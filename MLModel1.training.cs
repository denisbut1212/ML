﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace MLModel1_WebApi1
{
    public partial class MLModel1
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(new []{new InputOutputColumnPair(@"Entity", @"Entity"),new InputOutputColumnPair(@"Code", @"Code")})      
                                    .Append(mlContext.Transforms.ReplaceMissingValues(@"Year", @"Year"))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"Entity",@"Code",@"Year"}))      
                                    .Append(mlContext.Regression.Trainers.LightGbm(new LightGbmRegressionTrainer.Options(){NumberOfLeaves=4536,MinimumExampleCountPerLeaf=3,NumberOfIterations=4536,MaximumBinCountPerFeature=8,LearningRate=6.46226364544391E-06F,LabelColumnName=@"Number of internet users (OWID based on WB & UN)",FeatureColumnName=@"Features",Booster=new GradientBooster.Options(){SubsampleFraction=0.503521914948781F,FeatureFraction=1F,L1Regularization=20000000000F,L2Regularization=101.672072627855F}}));

            return pipeline;
        }
    }
}
